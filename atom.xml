<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://manmanza.top</id>
    <title>kele</title>
    <link href="http://manmanza.top" />
    <updated>2023-10-21T12:08:32.743Z</updated>
    <entry>
        <id>http://manmanza.top/2023/10/21/P3853%20[TJOI2007]%20%E8%B7%AF%E6%A0%87%E8%AE%BE%E7%BD%AE/</id>
        <title></title>
        <link rel="alternate" href="http://manmanza.top/2023/10/21/P3853%20[TJOI2007]%20%E8%B7%AF%E6%A0%87%E8%AE%BE%E7%BD%AE/"/>
        <content type="html">&lt;h1 id=&#34;p3853-tjoi2007-路标设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#p3853-tjoi2007-路标设置&#34;&gt;#&lt;/a&gt; P3853 [TJOI2007] 路标设置&lt;/h1&gt;
&lt;h5 id=&#34;题意给定一段路的长度n个路标的位置以及你还可以放新的路标的数量定义最远的相邻路标距离为空旷指数要求放置新路标使空旷指数尽可能最小输出最小值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题意给定一段路的长度n个路标的位置以及你还可以放新的路标的数量定义最远的相邻路标距离为空旷指数要求放置新路标使空旷指数尽可能最小输出最小值&#34;&gt;#&lt;/a&gt; 题意：给定一段路的长度，N 个路标的位置，以及你还可以放新的路标的数量，定义最远的相邻路标距离为空旷指数，要求放置新路标，使空旷指数尽可能最小，输出最小值。&lt;/h5&gt;
&lt;h5 id=&#34;题解二分空旷指数x从头遍历数组如果两个路标之间的距离大于x很明显不满足题目要求那么就需要在路标前x处安放一个新路标然后继续检查两个路标之间的距离是否小于x如果不是则继续按要求放新的路标-当用的路标数已经超过了给定路标数则不满足反之则满足&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题解二分空旷指数x从头遍历数组如果两个路标之间的距离大于x很明显不满足题目要求那么就需要在路标前x处安放一个新路标然后继续检查两个路标之间的距离是否小于x如果不是则继续按要求放新的路标-当用的路标数已经超过了给定路标数则不满足反之则满足&#34;&gt;#&lt;/a&gt; 题解：二分空旷指数 X，从头遍历数组，如果两个路标之间的距离大于 X，很明显不满足题目要求，那么就需要在路标前 X 处安放一个新路标，然后继续检查两个路标之间的距离是否小于 X，如果不是，则继续按要求放新的路标。当用的路标数已经超过了给定路标数，则不满足，反之则满足。&lt;/h5&gt;
&lt;h5 id=&#34;code&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#code&#34;&gt;#&lt;/a&gt; code：&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
#define int long long
const int N = 200010;
int n, m, k, ans;
int a[N];
bool check(int x) &amp;#123;
  int cnt = 0;//比较的位置
  int y=k;
  for (int i = 1; i &amp;lt; m; i++) &amp;#123;
    if (y &amp;lt; 0) &amp;#123;
      break;
    &amp;#125;
    if (a[i] - cnt &amp;lt;= x)
      cnt = a[i];
    else &amp;#123;
      cnt += x;//比较的X处放置坐标，那么也就是下一次的比较值向后走X米
      i--;//继续比较新放置位置坐标和刚才的位置距离
      y--;//次数减1
    &amp;#125;
  &amp;#125;
  if (y &amp;gt;= 0)
    return 1;
  return 0;
&amp;#125;
void solve() &amp;#123;
  cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; k;
  for (int i = 0; i &amp;lt; m; i++)
    cin &amp;gt;&amp;gt; a[i];
  int l = 0, r = n;
  //二分模板
  while (l &amp;lt; r) &amp;#123;
    int mid = (l + r) / 2;
    if (check(mid))&amp;#123;
      ans=mid;
      r = mid;
    &amp;#125;
    else
      l = mid + 1;
  &amp;#125;
  cout &amp;lt;&amp;lt; l &amp;lt;&amp;lt; &#39;\n&#39;;
&amp;#125;
signed main() &amp;#123;
  ios::sync_with_stdio(false);
  int t = 1;
  // cin &amp;gt;&amp;gt; t;
  while (t--) &amp;#123;
    solve();
  &amp;#125;
  return 0;
&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
</content>
        <updated>2023-10-21T12:08:32.743Z</updated>
    </entry>
    <entry>
        <id>http://manmanza.top/2023/10/18/text/</id>
        <title>text</title>
        <link rel="alternate" href="http://manmanza.top/2023/10/18/text/"/>
        <content type="html"></content>
        <updated>2023-10-18T07:37:32.000Z</updated>
    </entry>
</feed>
